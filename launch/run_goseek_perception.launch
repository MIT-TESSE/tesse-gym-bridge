<?xml version="1.0" encoding="ISO-8859-15"?>
<launch>
    <!-- Specify what to run -->
    <arg name="kimera_semantics"      default="false"/>
    <arg name="kimera_vio"            default="true"/>
    <arg name="visualize"             default="false"/>

    <!-- Segmentation will be run on demand in TESSE Gym Bridge -->
    <arg name="semantic_segmentation" default="false"/>

    <!-- TESSE ROS Bridge arguments -->
    <arg name="initial_scene"           default="1"/>
    <arg name="width"                   default="320"/>
    <arg name="height"                  default="240"/>
    <arg name="vertical_fov"            default="60"/>
    <arg name="near_draw_dist"          default="0.05"/>
    <arg name="far_draw_dist"           default="50"/>
    <arg name="enable_step_mode"        default="true"/>
    <arg name="node_delay"              default="5.0"/>
    <arg name="publish_segmentation"    default="false"/>
    <arg name="publish_depth"           default="false"/>
    <arg name="publish_mono_stereo"     default="false"/>
    <arg name="publish_metadata"        default="true"/>

    <!-- TESSE Gym Bridge arguments -->
    <arg name="metadata_port"              default="9007"/>
    <arg name="image_port"                 default="9008"/>
    <arg name="use_ground_truth"           default="false"/>
    <arg name="run_segmentation_on_demand" default="true"/>

    <arg name="model"                   default="TRTModel"/>
    <arg name="weight_file"             default="$(find tesse_segmentation_ros)/cfg/goseek-unet-a1.onnx"/>

    <!-- Kimera VIO arguments -->
    <arg name="use_lcd"                 default="false"/>
    <arg name="log_vio_output"          default="true"/>
    <arg name="run_stereo_dense"        default="true"/>

    <!-- StereoBM params tuned for left cam depth image -->
    <arg name="texture_threshold"        default="1"/>
    <arg name="disparity_range"          default="70"/>
    <arg name="min_disparity"            default="-35"/>
    <arg name="correlation_window_size"  default="21"/>

    <!-- Launch TESSE ROS bridge -->
   <include file="$(find tesse_ros_bridge)/launch/tesse_bridge.launch">
        <arg name="initial_scene"        value="$(arg initial_scene)"/>
        <arg name="width"                value="$(arg width)"/>
        <arg name="height"               value="$(arg height)"/>
        <arg name="vertical_fov"         value="$(arg vertical_fov)"/>
        <arg name="near_draw_dist"       value="$(arg near_draw_dist)"/>
        <arg name="far_draw_dist"        value="$(arg far_draw_dist)"/>
        <arg name="enable_step_mode"     value="$(arg enable_step_mode)"/>
        <arg name="publish_segmentation" value="$(arg publish_segmentation)"/>
        <arg name="publish_depth"        value="$(arg publish_depth)"/>
        <arg name="publish_mono_stereo"  value="$(arg publish_mono_stereo)"/>
        <arg name="publish_metadata"     value="$(arg publish_metadata)"/>
    </include>

    <!-- Launch TESSE Gym Bridge -->
    <include file="$(find tesse_gym_bridge)/launch/tesse_gym_bridge.launch">
        <arg name="metadata_port"              value="$(arg metadata_port)"/>
        <arg name="image_port"                 value="$(arg image_port)"/>
        <arg name="use_ground_truth"           value="$(arg use_ground_truth)"/>
        <arg name="run_segmentation_on_demand" value="(arg run_segmentation_on_demand)"/>
        <arg name="model"                      value="$(arg model)"/>
        <arg name="weight_file"                value="$(arg weight_file)"/>
    </include>

    <group if="$(arg semantic_segmentation)">
        <include file="$(find tesse_segmentation_ros)/launch/tesse_segmentation_ros.launch">
            <arg name="model"       value="$(arg model)"/>
            <arg name="weight_file" value="$(arg weight_file)"/>
        </include>
    </group>

    <group if="$(arg run_stereo_dense)">
        <include file="$(find tesse_gym_bridge)/launch/depth_reconstruction.launch">
            <arg name="texture_threshold"        value="$(arg texture_threshold)"/>
            <arg name="disparity_range"          value="$(arg disparity_range)"/>
            <arg name="min_disparity"            value="$(arg min_disparity)"/>
            <arg name="correlation_window_size"  value="$(arg correlation_window_size)"/>
        </include>
    </group>

    <!-- Launch Kimera VIO -->
    <group if="$(arg kimera_vio)">
        <include file="$(find kimera_vio_ros)/launch/kimera_vio_ros_tesse.launch">
            <arg name="use_lcd"          value="$(arg use_lcd)"/>
            <arg name="log_output"       value="$(arg log_vio_output)"/>
        </include>

        <!-- Kimera VIO Visualization -->
        <group if="$(arg visualize)">
            <node type="rviz" name="rviz_vio" pkg="rviz" args="-d $(find kimera_vio_ros)/rviz/kimera_vio_tesse.rviz"/>
        </group>
    </group>

    <!-- Launch Kimera Semantics -->
    <group if="$(arg kimera_semantics)">
        <include file="$(find kimera_semantics_ros)/launch/kimera_semantics.launch"/>

        <!-- Kimera Semantics Visualization -->
        <group if="$(arg visualize)">
            <node type="rviz" name="rviz_semantics" pkg="rviz" args="-d $(find kimera_semantics_ros)/rviz/kimera_semantics_gt.rviz"/>
        </group>
    </group>

</launch>
